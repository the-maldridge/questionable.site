version: "3.3"

services:

  traefik:
    image: "traefik:v3.1.2"
    container_name: "traefik"
    restart: "always"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.http.http.redirections.entryPoint.to=https"
      - "--entrypoints.https.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=http"
      - "--certificatesresolvers.letsencrypt.acme.email=letsencrypt@questionable.site"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"

  landing:
    build: ./landing
    container_name: landing
    restart: always
    init: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.landing.rule=Host(`questionable.site`)"
      - "traefik.http.routers.landing.entrypoints=https"
      - "traefik.http.routers.landing.tls.certresolver=letsencrypt"

  install:
    build: ./install
    container_name: install
    restart: always
    environment:
      USER: the-maldridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.install.rule=Host(`questionable.site`) && PathPrefix(`/install`)"
      - "traefik.http.routers.install.entrypoints=https"
      - "traefik.http.routers.install.tls.certresolver=letsencrypt"
      - "traefik.http.routers.install.middlewares=install-stripprefix@docker"
      - "traefik.http.middlewares.install-stripprefix.stripprefix.prefixes=/install"

  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: always

  flashpaper:
    image: ghcr.io/the-maldridge/flashpaper:v0.1.2
    container_name: flashpaper
    restart: always
    environment:
      FLASHPAPER_BASEPATH: /flashpaper
      REDIS_ADDR: redis:6379
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flashpaper.rule=Host(`questionable.site`) && PathPrefix(`/flashpaper`)"
      - "traefik.http.routers.flashpaper.entrypoints=https"
      - "traefik.http.routers.flashpaper.tls.certresolver=letsencrypt"

  vdo:
    build: ./vdo
    container_name: vdo
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vdo.rule=Host(`questionable.site`) && PathPrefix(`/vdo`)"
      - "traefik.http.routers.vdo.entrypoints=https"
      - "traefik.http.routers.vdo.tls.certresolver=letsencrypt"
      - "traefik.http.routers.vdo.middlewares=vdo-stripprefix@docker"
      - "traefik.http.middlewares.vdo-stripprefix.stripprefix.prefixes=/vdo"

  vcfsw:
    image: sneakynet/vcfsw:4
    container_name: vcfsw_sneakynet
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vcfsw.rule=Host(`sneaky.nonroutable.network`)"
      - "traefik.http.routers.vcfsw.entrypoints=https"
      - "traefik.http.routers.vcfsw.tls.certresolver=letsencrypt"

  gokapi:
    image: docker.io/f0rc3/gokapi:v1.9.1
    container_name: gokapi
    restart: always
    environment:
      TZ: UTC
    ports:
      - 127.0.0.1:53842:53842
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gokapi.rule=Host(`files.questionable.site`)"
      - "traefik.http.routers.gokapi.entrypoints=https"
      - "traefik.http.routers.gokapi.tls.certresolver=letsencrypt"
    volumes:
      - "gokapi_data:/app/data"
      - "gokapi_config:/app/config"

volumes:
  letsencrypt:
  links:
  gokapi_data:
  gokapi_config:
